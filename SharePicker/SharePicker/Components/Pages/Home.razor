@page "/"
@using SharePicker.Models
@using SharePicker.Services
@inject FinancialStatementRepository FinancialStatementRepository

<MudStack>
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h2">Select A Company To Analyse</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <CompanySelector OnCompanySelect="OnSelectedCompanyChange" />
        </MudCardContent>
    </MudCard>

    @if(_incomeStatements != null)
    {
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h2">Income</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <Income IncomeStatements="@_incomeStatements" />
            </MudCardContent>
        </MudCard>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h2">Balance Sheet</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <BalanceSheet BalanceSheetStatements="@_balanceSheetStatements" />
            </MudCardContent>
        </MudCard>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h2">Cash Flow</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <CashFlow CashFlowStatements="@_cashFlowStatements" />
            </MudCardContent>
        </MudCard>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h2">Profits And Sales</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>
                    Profits here are measured using EBIT (earings before interest and tax). 
                    Ebit should be increasing year on year. 
                    Revenue should also be increasing year on year as it indicates that the EBIT growth is due to an increase in sales rather than cutting costs.
                    One-off gains/costs are not excluded and may account for any spikes/dips in the below chart.
                </MudText>
                <ProfitsAndSales ProfitSeries="@_ebitSeries" SalesSeries="@_revenueSeries" />
            </MudCardContent>
        </MudCard>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h2">Profit Margin</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>
                    Profit margin here is measured as EBIT per revenue. 
                    The profit margin should be consistently at least 10-15%.
                    Companies with higher profit margins are better placed withstand tempory periods of difficulty that may depress profits.
                </MudText>
                <ProfitMargin ProfitMarginSeries="_ebitPerRevenueSeries" />
            </MudCardContent>
        </MudCard>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h2">DuPont Analysis</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>
                    ROCE (return on capital employed) is calculated as EBIT / Capital Employed.
                    Capital Employed = Total Assets - Current Liabilities + Short-Term Borrowings.
                    ROCE should be consistently above 15%.
                </MudText>
                <DuPont 
                    RoceSeries="@_roceSeries" 
                    CapitalTurnoverSeries="@_capitalTurnoverSeries" 
                    ProfitMarginSeries="@_ebitPerRevenueSeries"/>
            </MudCardContent>
        </MudCard>
    }
</MudStack>

@code {
    private List<IncomeStatement>? _incomeStatements;
    private List<BalanceSheetStatement>? _balanceSheetStatements;
    private List<CashFlowStatement>? _cashFlowStatements;
    private List<LabeledValue>? _revenueSeries;
    private List<LabeledValue>? _ebitSeries;
    private List<LabeledValue>? _ebitPerRevenueSeries;
    private List<LabeledValue>? _roceSeries;
    private List<LabeledValue>? _capitalTurnoverSeries;

    private async Task OnSelectedCompanyChange(Company company)
    {
        _incomeStatements = await FinancialStatementRepository.GetIncomeStatementsAsync(company, CancellationToken.None);
        _balanceSheetStatements = await FinancialStatementRepository.GetBalanceSheetStatementsAsync(company, CancellationToken.None);
        _cashFlowStatements = await FinancialStatementRepository.GetCashFlowStatementsAsync(company, CancellationToken.None);
        _revenueSeries = await FinancialStatementRepository.GetRevenueSeries(company, CancellationToken.None);
        _ebitSeries = await FinancialStatementRepository.GetEbitSeries(company, CancellationToken.None);
        _ebitPerRevenueSeries = await FinancialStatementRepository.GetEbitPerRevenueSeries(company, CancellationToken.None);
        _roceSeries = await FinancialStatementRepository.GetRoceSeries(company, CancellationToken.None);
        _capitalTurnoverSeries = await FinancialStatementRepository.GetCapitalTurnoverSeries(company, CancellationToken.None);
    }
}
