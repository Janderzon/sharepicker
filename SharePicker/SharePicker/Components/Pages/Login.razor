@page "/Login"

@using System.ComponentModel.DataAnnotations
@using SharePicker.Services

@inject CustomAuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <MudText>Logged In!</MudText>
    </Authorized>
    <NotAuthorized>
        <EditForm Model="@_input" OnValidSubmit="LoginUser" FormName="Login" Context="formContext">
            <DataAnnotationsValidator/>
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Username" Class="mt-3" @bind-Value="_input.Username" For="@(() => _input.Username)" />
                    <MudTextField Label="Password" Class="mt-3" @bind-Value="_input.Password" For="@(() => _input.Password)" InputType="InputType.Password" />
                    @if (_unrecognisedDetailsEntered)
                    {
                        <MudText Color="@Color.Error">Unrecognised credentials</MudText>
                    }
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </NotAuthorized>
</AuthorizeView>

@code {
    private InputModel _input { get; set; } = new();
    private bool _unrecognisedDetailsEntered;

    [SupplyParameterFromQuery(Name = "returnUrl")]
    private string? _returnUrl { get; set; }

    private void LoginUser()
    {
        if (!AuthenticationStateProvider.AuthenticateUser(_input.Username, _input.Password))
        {
            _unrecognisedDetailsEntered = true;
            return;
        }

        _unrecognisedDetailsEntered = false;

        if (_returnUrl != null)
            NavigationManager.NavigateTo(_returnUrl);
    }

    private class InputModel
    {
        [Required]
        public string Username { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}
